#!/bin/bash

# Define the storage directory
STORAGE_DIR="$HOME/.recall"

# Create the directory if it doesn't exist
mkdir -p "$STORAGE_DIR"

# Function to store a password
store_val() {
    local key="$1"
    local value="$2"

    # Save the password to a file
    echo "$value" > "$STORAGE_DIR/$key"
    if [ -d "$STORAGE_DIR/.git" ]; then
        (cd $STORAGE_DIR; ga $key; gp)
    fi
}

# Function to retrieve a password
retrieve_val() {
    local key="$1"

    if [[ -f "$STORAGE_DIR/$key" ]]; then
        # Copy the password to the clipboard
        local value
        value=$(<"$STORAGE_DIR/$key")   # Read the content of the file
        value=$(echo "$value" | sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//')
        echo -n "$value" | xclip -selection clipboard  # Change xclip to pbcopy on macOS        
        echo "Value copied to clipboard."
    else
        echo "No value found for key: $key"
    fi
}

# Main script logic
if [[ $# -eq 2 ]]; then
    if [ "$2" = "-o" ]; then
        cat "$STORAGE_DIR/$1"
    else
        store_val "$1" "$2"
    fi
elif [[ $# -eq 1 ]]; then
    retrieve_val "$1"
else
    echo "Usage: recall key [value]"
    echo "Use recall key to store a value or recall key to retrieve it."
fi
